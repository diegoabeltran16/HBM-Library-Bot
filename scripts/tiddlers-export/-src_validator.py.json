{
  "title": "-src_validator.py",
  "text": "## [[Tags]]\nPython -src_validator.py [[--- Codigo]]\n\n```python\n# src/validator.py\n\nfrom typing import Tuple, Dict\n\ndef validar_texto_no_vacio(texto: str) -> Tuple[bool, str]:\n    if not texto or len(texto.strip()) < 10:\n        return False, \"texto vacío o invisible\"\n    return True, \"\"\n\ndef validar_longitud(texto: str, umbral_palabras: int = 150) -> Tuple[bool, str]:\n    palabras = texto.split()\n    if len(palabras) < umbral_palabras:\n        return False, f\"texto muy corto ({len(palabras)} palabras)\"\n    return True, \"\"\n\ndef validar_titulo(titulo: str) -> Tuple[bool, str]:\n    if not titulo or titulo.strip().lower() in [\"untitled\", \"document\", \"none\", \"\"]:\n        return False, \"título genérico o vacío\"\n    if len(titulo.strip()) < 15:\n        return False, \"título demasiado corto\"\n    return True, \"\"\n\ndef validar_autor(autor: str) -> Tuple[bool, str]:\n    if not autor:\n        return False, \"autor no presente\"\n    blacklist = [\"unknown\", \"anonymous\", \"n/a\", \"-\", \"\"]\n    if autor.strip().lower() in blacklist:\n        return False, f\"autor inválido: {autor.strip()}\"\n    return True, \"\"\n\ndef validar_documento(texto: str, titulo: str = \"\", autor: str = \"\") -> Tuple[bool, Dict]:\n    \"\"\"\n    Evalúa criterios mínimos antes de exportar.\n    Incluye validación de texto, longitud, título y autor.\n    \"\"\"\n    errores = []\n\n    for funcion in [validar_texto_no_vacio, validar_longitud]:\n        ok, razon = funcion(texto)\n        if not ok:\n            errores.append(razon)\n\n    for funcion, valor in [(validar_titulo, titulo), (validar_autor, autor)]:\n        ok, razon = funcion(valor)\n        if not ok:\n            errores.append(f\"(warning) {razon}\")\n\n    if errores:\n        return False, {\"razones\": errores}\n\n    return True, {}\n\n```",
  "tags": "Python -src_validator.py [[--- Codigo]]",
  "type": "text/markdown",
  "created": "20250423165831858",
  "modified": "20250423165831858"
}