{
  "title": "-tests_test_enhancer.py",
  "text": "## [[Tags]]\n[[--- 🧬 Por Clasificar]]\n\n```python\n# ─────────────────────────────────────────────────────────────\n# 🧬 Test nuevo flujo: pipeline_hooked_enhancer\n# ─────────────────────────────────────────────────────────────\n\nimport pytest\nimport sys\nfrom pathlib import Path\nsys.path.append(str(Path(__file__).resolve().parents[1]))\n\nfrom src.enhancer import (\n    reemplazar_cid_ascii,\n    reparar_cid,\n    reparar_palabras_partidas,\n    reparar_encoding,\n    normalizar_unicode,\n    marcar_fragmentos_dudosos,\n    enriquecer_texto,\n    acumular_stats,\n    reparar_ocr_simbolos,\n    pipeline_hooked_enhancer,  # 🧬 Nuevo import\n)\n\n\ndef test_pipeline_hooked_enhancer_basico(tmp_path):\n    texto_dañado = \"cid:241 El aÃ±o 2023 fue difÃ­cil. ﬁle, ﬂuid, Ɵmega.\"\n    ruta_dummy = tmp_path / \"texto_dummy.pdf\"\n    ruta_dummy.write_text(\"dummy content\")\n\n    config = {\n        \"pasos\": [\n            reemplazar_cid_ascii,\n            reparar_encoding,\n            normalizar_unicode,\n            reparar_palabras_partidas,\n            reparar_cid,\n            reparar_ocr_simbolos,\n            marcar_fragmentos_dudosos\n        ],\n        \"retry_umbral\": 1,\n        \"max_intentos\": 2\n    }\n\n    enriquecido, stats = pipeline_hooked_enhancer(texto_dañado, config)\n\n    assert \"cid:\" not in enriquecido\n    assert \"ó\" in enriquecido or \"á\" in enriquecido\n    assert \"file\" in enriquecido\n    assert \"fluid\" in enriquecido\n    assert \"Omega\" in enriquecido or \"O\" in enriquecido\n    assert \"Ã\" not in enriquecido\n\n\ndef test_pipeline_hooked_enhancer_no_cambios(tmp_path):\n    texto_limpio = \"Este es un texto sin errores visibles.\"\n    ruta_dummy = tmp_path / \"texto_ok.pdf\"\n    ruta_dummy.write_text(\"dummy content\")\n\n    config = {\n        \"pasos\": [\n            reemplazar_cid_ascii,\n            reparar_encoding,\n            normalizar_unicode,\n            reparar_palabras_partidas,\n            reparar_cid,\n            reparar_ocr_simbolos,\n            marcar_fragmentos_dudosos\n        ]\n    }\n\n    enriquecido, stats = pipeline_hooked_enhancer(texto_limpio, config)\n    assert enriquecido == texto_limpio\n\n```",
  "tags": "[[--- 🧬 Por Clasificar]]",
  "type": "text/markdown",
  "created": "20250424175932291",
  "modified": "20250424175932291"
}