{
  "title": "CONTRIBUTING.md",
  "text": "## [[Tags]]\n[[--- Documentacion]]\n\n```markdown\n# 🤝 Guía para Contribuir a Dewey Pipeline\n\n¡Gracias por tu interés en colaborar!  \nEste proyecto busca construir herramientas abiertas para organizar y analizar conocimiento técnico y científico, y cada contribución suma.\n\n---\n\n## 📦 ¿Cómo empezar?\n\n1. **Haz un fork** de este repositorio.\n2. Crea una nueva rama:  \n   `git checkout -b feat/tu-mejora`\n3. Realiza tus cambios localmente.\n4. Sigue el formato de commits (abajo).\n5. Abre un Pull Request claro y descriptivo. ¡Nos encantará revisarlo!\n\n---\n\n## ✅ Tipos de contribución bienvenidos\n\n| Tipo | Ejemplos |\n|------|----------|\n| Documentación | Mejoras en el README, nuevos ejemplos, tutoriales |\n| Código | Nuevas funciones, refactor, optimizaciones |\n| Testeo | Tests unitarios, cobertura, casos edge |\n| Reportes | Issues bien descritos y reproducibles |\n| Ideas | Propuestas en discusiones o nuevos módulos |\n\n---\n\n## 🧠 Formato de commits\n\n> Sistema diseñado para facilitar:\n> \n> - 🔍 Trazabilidad clara del desarrollo\n> - 🧠 Metacognición del proceso (saber qué lo que se aprende y cuándo)\n> - 📦 Refactorizaciones controladas y documentación sincronizada\n> - 🚀 Escalabilidad futura para equipos y CI/CD\n\n---\n\n## 🧩 Estructura de un mensaje de commit\n\n```\n(C-#,md.#,bloq.#)-[tipo](estado): descripción breve\n```\n\n| **Sección** | **Significado** | **Ejemplo** |\n| --- | --- | --- |\n| `C-#` | Ciclo de desarrollo | `C-1` (Fase 1: MVP) |\n| `md.#` | Módulo trabajado (parser=1, cleaner=2, ...) | `md.3` = `classifier.py` |\n| `bloq.#` | Bloque funcional o acción puntual | `bloq.2` = `test` |\n| `[tipo]` | Tipo de cambio (`feat`, `fix`, `refac`, `docs`, `test`) | `feat` = nueva función |\n| `(estado)` | Estado actual del cambio (`(p)` progreso, `(D)` done) | `(D)` = terminado |\n\n---\n\n## 🛠 Tipos recomendados\n\n| Tipo | Uso |\n| --- | --- |\n| `feat` | Nueva funcionalidad implementada |\n| `fix` | Corrección de bug |\n| `refac` | Refactorización de código sin cambiar funcionalidad |\n| `test` | Test nuevo o ajustado |\n| `docs` | Cambios en documentación |\n\n---\n\n## 🧠 Ejemplos de commits\n\n```\n(C-1,md.1,bloq.1)-feat(D): función extract_text() inicial\n```\n\n## 💬 ¿Dudas? ¿Ideas?\n\nPodés:\n\n- Abrir una [Issue](https://github.com/diegoabeltran16/dewey-pipeline/issues)\n- Escribirnos directamente desde tu fork con sugerencias\n- O dejar comentarios en tu PR\n\nGracias por construir conocimiento abierto con nosotr@s 🌍✨\n\n\n```",
  "tags": "[[--- Documentacion]]",
  "type": "text/markdown",
  "created": "20250422015630453",
  "modified": "20250422015630453"
}