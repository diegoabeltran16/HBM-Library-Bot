{
  "title": "-tests_test_cleaner.py",
  "text": "## [[Tags]]\nPython -tests_test_cleaner.py [[--- Codigo]] [[--🧪 tests/]]\n\n```python\n# tests/test_cleaner.py\nimport sys\nfrom pathlib import Path\nfrom src.cleaner import (\n    limpiar_texto,\n    normalizar_unicode,\n    eliminar_lineas_ruido,\n    limpiar_texto_completo,\n)\n\n# 🔧 Asegura que src/ sea visible desde cualquier entorno\nsys.path.append(str(Path(__file__).resolve().parents[1]))\n\n# 🔹 Test 1: Limpieza básica de saltos y espacios\ndef test_limpieza_espacios_y_saltos():\n    texto = \"Este es un texto   con  espacios  \\n y saltos \\n\\n\\n innecesarios.\"\n    resultado = limpiar_texto(texto)\n    assert \"\\n\\n\" in resultado\n    assert \"  \" not in resultado\n    assert resultado.startswith(\"Este es un texto\")\n\n# 🔹 Test 2: Normalización Unicode de caracteres acentuados\ndef test_normalizacion_unicode():\n    texto = \"Cafe\\u0301\"  # \"Café\" descompuesto (C + acento)\n    resultado = normalizar_unicode(texto)\n    assert resultado == \"Café\"\n\n# 🔹 Test 3: Eliminación de líneas de símbolos decorativos\ndef test_elimina_lineas_de_ruido():\n    texto = \"Resumen\\n****\\nEste es el contenido\\n...\\n\"\n    resultado = eliminar_lineas_ruido(texto)\n    assert \"****\" not in resultado\n    assert \"...\" not in resultado\n    assert \"Resumen\" in resultado\n    assert \"contenido\" in resultado\n\n# 🔹 Test 4: Encabezados convertidos a Markdown si modo_md=True\ndef test_limpieza_completa_con_markdown():\n    texto = \"1. Introducción\\n\\nEste trabajo estudia...\\n\\nConclusión\"\n    resultado = limpiar_texto_completo(texto, modo_md=True)\n    assert \"## 1. Introducción\" in resultado\n    assert \"## Conclusión\" in resultado\n    assert \"estudia\" in resultado\n\n# 🔹 Test 5: Texto técnico simulado con fórmula y encabezado\ndef test_texto_tecnico_simulado_formula():\n    texto = \"\"\"\n    B. 519.2 Probability and Statistics, the Science of Uncertainty\n    =====================\n    Let X ~ N(0, 1) be a standard normal random variable.\n\n    Then: E[X] = 0   and    Var(X) = 1\n\n    ***\n    \"\"\"\n\n    resultado = limpiar_texto_completo(texto, modo_md=True)\n    assert \"519.2 Probability\" in resultado\n    assert \"Let X ~ N(0, 1)\" in resultado\n    assert \"E[X] = 0\" in resultado\n    assert \"***\" not in resultado\n    assert \"=====\" not in resultado\n\n```",
  "tags": "Python -tests_test_cleaner.py [[--- Codigo]] [[--🧪 tests/]]",
  "type": "text/markdown",
  "created": "20250423165831862",
  "modified": "20250423165831862"
}