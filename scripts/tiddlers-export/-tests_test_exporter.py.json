{
  "title": "-tests_test_exporter.py",
  "text": "## [[Tags]]\n-tests_test_exporter.py [[--- Codigo]] [[--🧪 tests/]] -src_exporter.py [[🌀2️⃣ Chequeo previo a exportación]]\n\n```python\nimport sys\nimport hashlib\nimport shutil\nfrom pathlib import Path\n\nsys.path.append(str(Path(__file__).resolve().parents[1]))\n\nfrom src.exporter import exportar_archivos, slugify\n\ndef test_exportar_archivos_crea_todos_los_formatos(tmp_path):\n    # 📄 Crear PDF falso para simular entrada\n    pdf_path = tmp_path / \"fake_doc.pdf\"\n    pdf_path.write_text(\"Simulado\")\n\n    texto = \"Este es un párrafo.\\n\\nEste es otro.\"\n    titulo = \"Documento de Prueba\"\n    autor = \"Ana María\"\n    tipo = \"Essay\"\n    categoria = \"Filosofía\"\n    dewey = \"100\"\n\n    # 🧬 Calcular hash simulado\n    hash_doc = hashlib.md5(\"Simulado\".encode(\"utf-8\")).hexdigest()\n\n    # 📦 Ejecutar exportación\n    exportar_archivos(tipo, titulo, texto, categoria, dewey, autor, hash_doc)\n\n    tipo_slug = slugify(tipo)\n    titulo_slug = slugify(titulo)\n    base_path = Path(\"output\") / tipo_slug / f\"{titulo_slug}_{hash_doc}\"\n\n    assert base_path.exists(), \"No se creó la carpeta por documento\"\n\n    for ext in [\".txt\", \".md\", \".jsonl\"]:\n        archivo = base_path / f\"{hash_doc}{ext}\"\n        assert archivo.exists(), f\"Falta el archivo: {archivo}\"\n        assert archivo.stat().st_size > 0, f\"Archivo vacío: {archivo}\"\n\n    # 🔐 Cierre explícito y limpieza solo si no está en uso\n    try:\n        for archivo in base_path.glob(\"*\"):\n            archivo.unlink()\n        base_path.rmdir()\n        base_path.parent.rmdir()\n    except PermissionError as e:\n        print(f\"⚠️ No se pudo limpiar completamente por permisos: {e}\")\n\n```",
  "tags": "-tests_test_exporter.py [[--- Codigo]] [[--🧪 tests/]] -src_exporter.py [[🌀2️⃣ Chequeo previo a exportación]]",
  "type": "text/markdown",
  "created": "20250424205039141",
  "modified": "20250424205039141"
}