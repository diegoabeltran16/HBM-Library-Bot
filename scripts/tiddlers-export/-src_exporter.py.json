{
  "title": "-src_exporter.py",
  "text": "## [[Tags]]\n-src_exporter.py [[--- Codigo]] -tests_test_exporter.py [[🌀2️⃣ Chequeo previo a exportación]]\n\n```python\n\"\"\"\n📦 exporter.py – Exportación estructurada y AI-ready para OpenPages Pipeline\n\"\"\"\nfrom pathlib import Path\nimport json\nimport re\n\n# Carpeta de salida base\nOUTPUT_DIR = Path(\"output\")\nOUTPUT_DIR.mkdir(exist_ok=True)\n\n# ────────────────────────────────────────────────\n# 🔣 Función de slugificación\n# ────────────────────────────────────────────────\ndef slugify(texto: str) -> str:\n    \"\"\"\n    Convierte cualquier texto en un slug amigable para nombres de carpeta.\n    \"\"\"\n    texto = texto or \"sin_titulo\"\n    texto = texto.lower()\n    texto = re.sub(r\"[^\\w\\s-]\", \"\", texto)\n    texto = re.sub(r\"[\\s_-]+\", \"-\", texto).strip('-')\n    return texto\n\n# ────────────────────────────────────────────────\n# 📤 Exportador principal\n# ────────────────────────────────────────────────\ndef exportar_archivos(\n    tipo: str,\n    titulo: str,\n    texto: str,\n    categoria: str,\n    dewey: str,\n    autor: str = \"\",\n    hash_doc: str = \"\"\n):\n    \"\"\"\n    Exporta el texto procesado en .txt, .md y .jsonl,\n    dentro de output/{slug_tipo}/{slug_titulo}_{hash_doc}/\n    \"\"\"\n    if not hash_doc:\n        raise ValueError(\"Se requiere un hash único para la exportación por documento.\")\n\n    tipo_slug = slugify(tipo)\n    titulo_slug = slugify(titulo)\n    carpeta = OUTPUT_DIR / tipo_slug / f\"{titulo_slug}_{hash_doc}\"\n    carpeta.mkdir(parents=True, exist_ok=True)\n\n    # Archivos de salida\n    ruta_txt   = carpeta / f\"{hash_doc}.txt\"\n    ruta_md    = carpeta / f\"{hash_doc}.md\"\n    ruta_jsonl = carpeta / f\"{hash_doc}.jsonl\"\n\n    # Guardar contenido\n    _guardar_txt(ruta_txt, texto)\n    _guardar_md(ruta_md, texto, titulo, autor, categoria, dewey)\n    _guardar_jsonl(ruta_jsonl, texto, hash_doc, categoria, dewey)\n\n# ────────────────────────────────────────────────\n# 📄 Helpers de guardado\n# ────────────────────────────────────────────────\ndef _guardar_txt(ruta: Path, texto: str):\n    with open(ruta, \"w\", encoding=\"utf-8\") as f:\n        f.write(texto)\n\ndef _guardar_md(ruta: Path, texto: str, titulo: str, autor: str, categoria: str, dewey: str):\n    encabezado = (\n        \"---\\n\"\n        f\"titulo: {titulo or 'Sin título'}\\n\"\n        f\"autor: {autor or 'Desconocido'}\\n\"\n        f\"categoria: {categoria}\\n\"\n        f\"dewey: {dewey}\\n\"\n        \"---\\n\\n\"\n    )\n    with open(ruta, \"w\", encoding=\"utf-8\") as f:\n        f.write(encabezado + texto)\n\ndef _guardar_jsonl(ruta: Path, texto: str, hash_doc: str, categoria: str, dewey: str):\n    parrafos = [p.strip() for p in texto.split(\"\\n\\n\") if p.strip()]\n    with open(ruta, \"w\", encoding=\"utf-8\") as f:\n        for i, p in enumerate(parrafos):\n            linea = {\n                \"id\": hash_doc,\n                \"index\": i,\n                \"paragraph\": p,\n                \"categoria\": categoria,\n                \"dewey\": dewey\n            }\n            f.write(json.dumps(linea, ensure_ascii=False) + \"\\n\")\n\n```",
  "tags": "-src_exporter.py [[--- Codigo]] -tests_test_exporter.py [[🌀2️⃣ Chequeo previo a exportación]]",
  "type": "text/markdown",
  "created": "20250424205039114",
  "modified": "20250424205039114"
}