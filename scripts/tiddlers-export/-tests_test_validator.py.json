{
  "title": "-tests_test_validator.py",
  "text": "## [[Tags]]\nPython -tests_test_validator.py [[--- Codigo]] [[--ðŸ§ª tests/]]\n\n```python\nimport pytest\nimport sys\nfrom pathlib import Path\n\n# Asegura visibilidad del mÃ³dulo src/\nsys.path.append(str(Path(__file__).resolve().parents[1]))\n\nfrom src.validator import (\n    validar_resumen,\n    validar_secciones,\n    validar_citas_referencias,\n    validar_documento\n)\n\n# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n# Tests unitarios especÃ­ficos\n# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n\ndef test_validar_resumen_faltante():\n    texto = \"Este documento no tiene resumen inicial explÃ­cito.\"\n    errores = validar_resumen(texto)\n    assert any(\"Resumen no encontrado\" in e for e in errores)\n\ndef test_validar_secciones_faltantes():\n    texto = \"Este texto solo tiene una secciÃ³n llamada Resultados.\"\n    errores = validar_secciones(texto)\n    assert any(\"Secciones faltantes\" in e for e in errores)\n\ndef test_validar_citas_referencias_ausentes():\n    texto = \"Este texto no contiene ningÃºn patrÃ³n vÃ¡lido de referencia acadÃ©mica.\"\n    errores = validar_citas_referencias(texto)\n    assert any(\"citas\" in e.lower() for e in errores)\n\n\n# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n# Test integrador: documento con mÃºltiples errores\n# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n\ndef test_validar_documento_con_errores(tmp_path):\n    texto = \"texto muy corto sin estructura ni resumen ni referencias\"\n    ruta_pdf = tmp_path / \"doc_fallido.pdf\"\n    ruta_pdf.write_text(\"contenido simulado\")\n\n    errores = validar_documento(texto, str(ruta_pdf))\n    assert isinstance(errores, list)\n    assert len(errores) >= 3\n    assert any(\"Resumen\" in e for e in errores)\n    assert any(\"Secciones\" in e for e in errores)\n    assert any(\"citas\" in e.lower() for e in errores)\n\ndef test_documento_real_the_origins():\n    import fitz  # PyMuPDF\n    ruta = \"tests/fixtures/The Origins of music.pdf\"\n    doc = fitz.open(ruta)\n    texto = \"\\n\".join([page.get_text() for page in doc if page.get_text()])\n\n    errores = validar_documento(texto, ruta)\n    print(\"Errores detectados:\", errores)\n    assert isinstance(errores, list)\n    assert len(errores) <= 2  # toleramos 0-2 errores leves (ej: resumen muy largo o cita no reconocida)\n\n\n```",
  "tags": "Python -tests_test_validator.py [[--- Codigo]] [[--ðŸ§ª tests/]]",
  "type": "text/markdown",
  "created": "20250424175932298",
  "modified": "20250424175932298"
}