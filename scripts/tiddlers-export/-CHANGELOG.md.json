{
  "title": "-CHANGELOG.md",
  "text": "## [[Tags]]\n[[--- Codigo]] [[--📘 Documentacion]] [[--- 🗂 Principios de programación]] [[--- 🌀 Helices de desarrollo]] [[--- 🎯 Detalles del proyecto]] -CHANGELOG.md\n\n```markdown\n# 📜 CHANGELOG – OpenPages Pipeline\n> Registro evolutivo helicoidal del sistema, agrupado por vueltas (Vx) y genes funcionales.\n\n---\n\n## 📝 Changelog V3.R2.C1\n\n### ✨ Nuevas funciones:\n\n- `validar_documento()`: Coordinador tolerante con logging estructurado\n  \n- `validar_resumen()`, `validar_secciones()`, `validar_citas_referencias()`: Heurísticas semánticas\n  \n- `mapear_codigo()`, `clasificar_severidad()`, `detectar_zona()`: Trazabilidad ética\n  \n\n### 🧬 Nuevos archivos/tipos de exportación:\n\n- `.jsonl` de errores semánticos por hash, con `zone`, `error_code`, `severity`, `razones`\n\n### 🧪 Cobertura de tests:\n\n- ✅ 100% cobertura funcional para cada subvalidador y flujo integrador\n\n### 🔄 Mutaciones en módulos relacionados:\n\n- `logger.py`: Agrega `log_validacion()` para eventos estructurados\n  \n- `utils.py`: Añade `calcular_hash_md5()` para trazabilidad por documento\n\n---\n\n## 📝 Changelog V3.R2.C2\n\n### ✨ Nuevas funciones:\n\n🧠 Gen `validator.py`\n\n- `validar_documento()`: Coordinador tolerante con logging estructurado\n  \n- `validar_resumen()`, `validar_secciones()`, `validar_citas_referencias()`: Heurísticas semánticas\n  \n- `mapear_codigo()`, `clasificar_severidad()`, `detectar_zona()`: Trazabilidad ética\n  \n\n🧬 Gen `enhancer.py`\n\n- `reparar_encoding()`, `reparar_cid()`, `reparar_ocr_simbolos()`, `normalizar_unicode()`\n  \n- `pipeline_hooked_enhancer()`: Reparador adaptativo por impacto\n  \n- `enriquecer_texto()`: Interfaz sencilla para limpieza semántica\n  \n\n🧩 Gen `enhancer_utils.py`\n\n- `acumular_stats()`: Acumulación de métricas por función\n  \n- `aplicar_diccionario()`: Diccionario externo para OCR (`ocr_dict.json`)\n  \n### 🧬 Nuevos archivos/tipos de exportación:\n\n- `.jsonl` de errores semánticos por hash, con `zone`, `error_code`, `severity`, `razones`\n  \n- `.md` enriquecido con encabezados YAML (`exporter.py`)\n  \n- `.jsonl` por párrafos listos para AI (`exportar_archivos()`)\n  \n\n### 🧪 Cobertura de tests:\n\n- ✅ 100% cobertura funcional en `test_validator.py`, `test_enhancer.py`\n  \n- ✅ Validaciones de `hash`, encabezados, resumen y citas\n  \n- ✅ Test de impacto adaptativo (cuenta cuántas correcciones por paso)\n  \n\n### 🔄 Mutaciones en módulos relacionados:\n\n- `logger.py`: Agrega `log_validacion()` para eventos estructurados\n  \n- `utils.py`: Añade `calcular_hash_md5()` para trazabilidad por documento\n  \n- `exporter.py`: Limpieza de exportación con `slugify()`, integración de hash + título\n  \n\n### 📈 Derivadas observadas\n\n- **∆r = +6.0** → Nuevas funciones en tres genes (`validator`, `enhancer`, `utils`)\n  \n- **∆c = +8.0** → Trazabilidad total, fallback tolerante, interfaz modular y testable\n\n---\n\n## 📝 Changelog V3.R2.C3\n\n### ✨ Nuevas funciones:\n\n📦 Gen `exporter.py`\n\n- `exportar_archivos()`: Exporta `.txt`, `.md`, `.jsonl` en rutas trazables y AI-ready\n  \n- `_guardar_txt()`, `_guardar_md()`, `_guardar_jsonl()`: Helpers limpios por tipo\n  \n- `slugify()`: Estandariza nombres de carpetas/archivos\n  \n\n🧠 Gen `logger.py`\n\n- Mensaje visual y estructurado de exportación por documento\n\n### 🧪 Cobertura de tests:\n\n- ✅ Exportación verificada para cada tipo de archivo (`.txt`, `.md`, `.jsonl`)\n  \n- ✅ Testea que el contenido no esté vacío y que la estructura sea correcta\n  \n- ✅ Limpieza de directorios tras exportación para entornos CI\n  \n### 📈 Derivadas observadas\n\n- **∆r = +3.0** → Nuevas funciones activadas por exportación estructurada\n  \n- **∆c = +3.0** → Modularidad, trazabilidad, test unitario por tipo de salida\n\n---\n\n## 📝 Changelog V3.R2.C4\n\n### ✨ Nuevas funciones:\n\n🧩 Gen `enhancer_utils.py`\n\n- `acumular_stats()`: Fusiona métricas por tipo de corrección sin perder trazabilidad\n  \n- `aplicar_diccionario()`: Aplica diccionario OCR externo (`ocr_dict.json`) para correcciones ligadas al dominio visual\n  \n\n🧪 Gen `test_utils.py`\n\n- `test_aplicar_diccionario()`: Valida reemplazo correcto a partir de un dict OCR\n  \n- `test_acumular_stats()`: Asegura combinación robusta de contadores en pipeline adaptativo\n  \n\n### 🧬 Nuevos usos/estructuras:\n\n- Uso dinámico de `ocr_dict.json` en `pipeline_hooked_enhancer()` con fallback seguro\n  \n- Estadísticas detalladas por tipo de mutación textual registradas en `stats_global`\n  \n\n### 🧪 Cobertura de tests:\n\n- ✅ Tests directos para ambos helpers en `test_utils.py`\n  \n- ✅ Integración comprobada dentro de `test_enhancer.py` vía stats acumuladas\n  \n\n### 🔄 Mutaciones en módulos relacionados:\n\n- `enhancer.py`: Delegación de limpieza OCR y acumulación de impacto a `enhancer_utils`\n  \n- `main.py`: No requiere cambios – integración transparente\n  \n\n### 📈 Derivadas observadas:\n\n- **∆r = +2.0** → Se introducen dos helpers clave para mejora semántica\n  \n- **∆c = +2.0** → Funciones reusables, documentadas y testeadas\n\n---\n\n## 📝 Changelog V3.R2.C5\n\n### ✨ Nuevas funciones:\n\n🧠 Gen `main.py`\n\n- `main()`: Coordinador del pipeline con capacidad de validación semántica\n  \n- Integración de `validar_documento()` dentro del flujo, sin interrupciones\n  \n- Logs de procesamiento por documento, incluso con errores semánticos\n  \n\n### 🧪 Cobertura de tests:\n\n- ✅ Flujo ejecutado completo con logs generados\n  \n- ✅ Comprobación manual de logs `.jsonl` y fallback no bloqueante\n  \n\n### 🔄 Mutaciones en módulos relacionados:\n\n- `validator.py`: Invocado condicionalmente, sin alteración directa\n  \n- `logger.py`: Reutilización de `log_evento()` para trazabilidad\n  \n\n### 📈 Derivadas observadas\n\n- **∆r = +2.0** → Expansión del flujo principal con validación integrada\n  \n- **∆c = +3.0** → Madurez funcional y trazabilidad alcanzada\n\n---\n\n## Cierre V.3\n\n### 🎯 Mutaciones integradas:\n\n- Validación semántica (`validator.py`) con trazabilidad por `zone`, `error_code`, `severity`, `razones`\n  \n- Corrección inteligente OCR con `ocr_dict.json`\n  \n- Exportación estructurada y AI-ready con carpetas por documento\n  \n- Orquestación tolerante vía CLI `--semantic-check`, `--tolerante`\n  \n- Hashing único por documento para evitar reprocesamientos\n  \n\n### 🧬 Genes mutados:\n\n- `validator.py`, `enhancer.py`, `exporter.py`, `main.py`, `utils.py`, `enhancer_utils.py`, `logger.py`\n\n### 🧪 Test y cobertura:\n\n- ✅ 100% en `test_validator.py`, `test_enhancer.py`, `test_utils.py`, `test_exporter.py`\n\n### 📦 Nuevos outputs:\n\n- `.txt`, `.md`, `.jsonl` por hash\n  \n- `.jsonl` de errores semánticos\n  \n- `ocr_dict.json` para control OCR\n  \n\n### 📈 Derivadas observadas:\n\n- **∆r = +5.0**\n  \n- **∆c = +6.0**\n```",
  "tags": "[[--- Codigo]] [[--📘 Documentacion]] [[--- 🗂 Principios de programación]] [[--- 🌀 Helices de desarrollo]] [[--- 🎯 Detalles del proyecto]] -CHANGELOG.md",
  "type": "text/markdown",
  "created": "20250424222736199",
  "modified": "20250424222736199"
}