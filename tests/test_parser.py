import sys
from pathlib import Path
import pytest

# ðŸ”§ Asegura que src/ sea visible desde cualquier entorno
sys.path.append(str(Path(__file__).resolve().parents[1]))

from src.parser import extract_text, es_pdf_complejo

# ---
# ðŸ§ª test_parser.py â€“ Pruebas integradas del mÃ³dulo de parsing
#
# Incluye tests para:
# - PDFs normales (texto extraÃ­ble directamente)
# - PDFs escaneados (requieren OCR)
# - ValidaciÃ³n de la heurÃ­stica `es_pdf_complejo`
# - Comportamiento de limpieza semÃ¡ntica


def test_extraccion_pdf_simple():
    texto = extract_text("tests/fixtures/pdf_simple.pdf")
    assert len(texto) > 100  # Texto mÃ­nimo esperado


def test_descarta_formula():
    texto = extract_text("tests/fixtures/pdf_formula.pdf")
    assert "âˆ«" not in texto  # Esperamos limpieza de caracteres simbÃ³licos si estÃ¡n mal interpretados


def test_pdf_texto_normal():
    texto = extract_text("tests/fixtures/pdf_textual.pdf")
    assert isinstance(texto, str)
    assert len(texto) > 50
    assert "introducciÃ³n" in texto.lower()


def test_pdf_necesita_ocr():
    texto = extract_text("tests/fixtures/pdf_escaneado.pdf")
    assert isinstance(texto, str)
    assert len(texto.strip()) > 20


def test_heuristica_es_pdf_complejo():
    assert es_pdf_complejo("tests/fixtures/pdf_escaneado.pdf") is True
    assert es_pdf_complejo("tests/fixtures/pdf_textual.pdf") is False
